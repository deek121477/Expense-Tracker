{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","console","log","ExpensesList","items","length","map","expense","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c043a8ef.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props)=>\r\n{\r\n const [enteredTitle,setEnteredTitle]=useState('');\r\n    const [enteredAmount,setEnteredAmount]=useState('');\r\n    const [enteredDate,setEnteredDate]=useState('');\r\n  \r\n    // const[userInput,setUserInput]=useState(\r\n    //    {\r\n      //     enteredTitle:'',\r\n        //  enteredAmount:'',\r\n       //enteredDate:''\r\n       //}\r\n   //);\r\n    const titleChangeHandler=(event)=> {\r\nsetEnteredTitle(event.target.value);\r\n //setUserInput(\r\n    // {\r\n   //      ...userInput,\r\n     //    enteredTitle:event.target.value,\r\n    // }\r\n //)\r\n //setUserInput((prevState) => {\r\n//return {...prevState, enteredTitle:event.target.value };\r\n //});\r\n //}\r\n    };\r\n   const amountChangeHandler=(event)=>\r\n   {\r\n       setEnteredAmount(event.target.value);\r\n       //setUserInput(\r\n      //  {\r\n     //       ...userInput,\r\n       //     enteredAmount:event.target.value,\r\n       // }\r\n   // )\r\n   //setUserInput((prevState) => {\r\n    //return {...prevState, enteredAmount:event.target.value };\r\n     //});\r\n   };\r\n   const dateChangeHandler=(event)=>\r\n   {\r\n       setEnteredDate(event.target.value);\r\n       //setUserInput(\r\n      //  {\r\n         //   ...userInput,\r\n        //    enteredDate:event.target.value,\r\n       // }\r\n //   )\r\n //setUserInput((prevState) => {\r\n    //return {...prevState, enteredDate:event.target.value };\r\n     //});\r\n   };\r\n\r\n   const submitHandler=(event)=>{\r\n       event.preventDefault();\r\n       const expenseData={\r\n           title: enteredTitle,\r\n           amount: +enteredAmount,\r\n           date: new Date(enteredDate)\r\n       };\r\n       props.onSaveExpenseData(expenseData);\r\n       setEnteredTitle(' ');\r\n       setEnteredAmount(' ');\r\n       setEnteredDate(' ');\r\n       \r\n\r\n\r\n   };\r\nreturn (\r\n    <form onSubmit={submitHandler}>\r\n   <div className='new-expense__controls'>\r\n       <div className='new-expense__control'>\r\n       <label>Title</label>\r\n           <input type='text' value={enteredTitle}  onChange={titleChangeHandler}/>\r\n       </div>\r\n       <div className='new-expense__control'>\r\n           <label>Amount</label>\r\n           <input type='number' min=\"0.01\" step=\"0.01\"  value={enteredAmount}  onChange={amountChangeHandler} />\r\n       </div>\r\n       <div className='new-expense__control'>\r\n           <label>Date</label>\r\n           <input type='date' min=\"2017-01-01\" max=\"2021-12-03\"  value={enteredDate}  onChange={dateChangeHandler} />\r\n       </div>\r\n      \r\n   </div>\r\n   <div className='new-expense__actions'>\r\n       <button type=\"Cancel\"onClick={props.onCancel}>Cancel</button>\r\n       <button type=\"submit\">Add Expense</button>\r\n       </div>\r\n</form>\r\n);\r\n\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\nconst [isEditing,setIsEditing]=useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) =>\r\n    {\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        //console.log(expenseData); its Alterative down given\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\nconst startEditingHandler=()=>\r\n{\r\nsetIsEditing(true);\r\n};\r\nconst stopEditinghandler=()=>{\r\n    setIsEditing(false);\r\n};\r\n    return (\r\n    <div className='new-expense'>\r\n    {!isEditing &&   <button onClick={startEditingHandler}>Add New Expense</button>}\r\n   {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditinghandler}/>}\r\n</div>\r\n); \r\n};\r\nexport default NewExpense;","\r\nimport './Card.css';\r\nimport React from 'react';\r\nfunction Card (props){\r\n     const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate (props)\r\n{\r\n    const month=props.date.toLocaleString('en-US',{ month: 'long' });\r\n    const day=props.date.toLocaleString('en-US',{ day: '2-digit' });\r\n    const year=props.date.getFullYear();\r\n    return (\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React,{useState} from 'react';\r\n\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\n\r\nconst ExpenseItem=(props)=> {\r\n\r\nconst [title, setTitle]= useState(props.title);\r\nconsole.log('Expense item evaluated by React')\r\n\r\nconst clickHandler= () => {\r\n  setTitle('Updated!');\r\n  console.log(title);\r\n};\r\n\r\n    return (\r\n      <li>\r\n          <Card className=\"expense-item\">\r\n             { /*<div>{props.date.toISOString()}</div>*/}\r\n            <ExpenseDate date={props.date}/>\r\n          <div className=\"expense-item__description\">\r\n              <h2>{props.title}</h2>\r\n              <div className=\"expense-item__price\">${props.amount}</div>\r\n              </div>\r\n             <button onClick={clickHandler}></button>\r\n      </Card>\r\n      </li>\r\n     \r\n  );\r\n}\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ExpensesFilter'\r\n\r\nconst ExpensesFilter = (props) =>{\r\nconst dropDownChangeHandler=(event)=>{\r\n   props.onChangeFilter(event.target.value);\r\n};\r\n return (\r\n     <div className=\"expenses-filter\">\r\n         <div className=\"expenses-filter__control\">\r\n             <label className='expenses-list__fallback'>Filter By Date</label>\r\n             <select   value={props.selected} onChange={dropDownChangeHandler}>\r\n             \r\n             <option value=\"2017\" >2017</option >\r\n                 <option value=\"2018\" >2018</option >\r\n                 <option value=\"2019\" >2019</option >\r\n                 < option value=\"2020\">2020</option >\r\n                 < option value=\"2021\">2021</option >\r\n             </select>\r\n\r\n         </div>\r\n     </div>\r\n\r\n );\r\n\r\n};\r\n\r\nexport default ExpensesFilter;","\r\nimport React from 'react';\r\n\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n   let barFillHeight='0%';\r\n   if(props.maxValue>0)\r\n   {\r\n       barFillHeight = Math.round((props.value/props.maxValue)*100)+'%';\r\n   }\r\n\r\n   return (\r\n       <div className='chart-bar'>\r\n           <div className='chart-bar__inner'>\r\n               <div  className='chart-bar__fill'\r\n            style={{height:barFillHeight }}>\r\n               </div>\r\n               <div className='chart-bar__label'>{props.label}</div>\r\n           </div>\r\n       </div>\r\n   );\r\n};\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n   const dataPointValues=props.dataPoints.map(dataPoint=>dataPoint.value);\r\n    const totalMaximum=Math.max(...dataPointValues);\r\n\r\n\r\n  return (\r\n    <div className='chart'>\r\n        {props.dataPoints.map((dataPoint) => (\r\n            <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n         />        \r\n    ))   }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) =>{\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n\r\n    ];\r\n\r\n\r\n\r\n    for(const expense of props.expenses){\r\n    const expenseMonth=expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value+=expense.amount;\r\n\r\n    }\r\n    return <Chart  dataPoints={chartDataPoints}/>;\r\n    \r\n        \r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props)=> {\r\n//const filterChangeHandler=selectedYear=>{\r\n // console.log('Expenses.js');\r\n // console.log(selectedYear);\r\n//};\r\nconst [filteredYear,setFilteredYear]=useState('2020');\r\nconst filterChangeHandler=selectedYear =>\r\n{\r\n  setFilteredYear(selectedYear)\r\n\r\n};\r\nconst filteredExpenses=props.items.filter(expense=>{\r\n  return expense.date.getFullYear().toString()===filteredYear;\r\n});\r\n\r\n\r\nreturn (\r\n    \r\n    \r\n      <div>\r\n    <Card className='expenses'>\r\n      <ExpensesFilter\r\n      selected={filteredYear}\r\n    onChangeFilter={filterChangeHandler}\r\n    />\r\n    <ExpensesChart expenses={filteredExpenses}/>\r\n<ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n//{/* <Card className=\"expenses\"> {/* <ExpensesFilter className=\"expense-filteryear\" selected={filteredYear} onChangeFilter={filterChangeHandler}/> */}\r\n    ","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}